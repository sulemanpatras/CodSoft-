{"ast":null,"code":"var _jsxFileName = \"/home/suleman/Downloads/project-management-system-react-javascript-main/src/pages/project/ProjectComments.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Avatar from \"../../components/Avatar\";\nimport { timestamp } from \"../../firebase/config\";\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\nimport { useFirestore } from \"../../hooks/useFirestore\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectComments({\n  project\n}) {\n  _s();\n  const {\n    updateDocument,\n    response\n  } = useFirestore(\"projects\");\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    user\n  } = useAuthContext();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const commentToAdd = {\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      content: newComment,\n      createdAt: timestamp.fromDate(new Date()),\n      id: Math.random()\n    };\n    await updateDocument(project.id, {\n      comments: [...project.comments, commentToAdd]\n    });\n    if (!response.error) {\n      setNewComment(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Project comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: project.comments.length > 0 && project.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: comment.photoURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-date\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formatDistanceToNow(comment.createdAt.toDate(), {\n              addSuffix: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-comment\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add new comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          onChange: e => setNewComment(e.target.value),\n          value: newComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectComments, \"wx0p15P+G0L1kcXn+UOA789ZZQQ=\", false, function () {\n  return [useFirestore, useAuthContext];\n});\n_c = ProjectComments;\nvar _c;\n$RefreshReg$(_c, \"ProjectComments\");","map":{"version":3,"names":["useState","Avatar","timestamp","useAuthContext","useFirestore","formatDistanceToNow","jsxDEV","_jsxDEV","ProjectComments","project","_s","updateDocument","response","newComment","setNewComment","user","handleSubmit","e","preventDefault","commentToAdd","displayName","photoURL","content","createdAt","fromDate","Date","id","Math","random","comments","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","comment","src","toDate","addSuffix","onSubmit","required","onChange","target","value","_c","$RefreshReg$"],"sources":["/home/suleman/Downloads/project-management-system-react-javascript-main/src/pages/project/ProjectComments.js"],"sourcesContent":["import { useState } from \"react\";\nimport Avatar from \"../../components/Avatar\";\nimport { timestamp } from \"../../firebase/config\";\nimport { useAuthContext } from \"../../hooks/useAuthContext\";\nimport { useFirestore } from \"../../hooks/useFirestore\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\n\nexport default function ProjectComments({ project }) {\n  const { updateDocument, response } = useFirestore(\"projects\");\n  const [newComment, setNewComment] = useState(\"\");\n  const { user } = useAuthContext();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const commentToAdd = {\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      content: newComment,\n      createdAt: timestamp.fromDate(new Date()),\n      id: Math.random(),\n    };\n    await updateDocument(project.id, {\n      comments: [...project.comments, commentToAdd],\n    });\n\n    if (!response.error) {\n      setNewComment(\"\");\n    }\n  };\n  return (\n    <div className=\"project-comments\">\n      <h4>Project comments</h4>\n      <ul>\n        {project.comments.length > 0 &&\n          project.comments.map((comment) => (\n            <li key={comment.id}>\n              <div className=\"comment-author\">\n                <Avatar src={comment.photoURL} />\n                <p>{comment.displayName}</p>\n              </div>\n              <div className=\"comment-date\">\n                <p>\n                  {formatDistanceToNow(comment.createdAt.toDate(), {\n                    addSuffix: true,\n                  })}\n                </p>\n              </div>\n              <div className=\"comment-content\">\n                <p>{comment.content}</p>\n              </div>\n            </li>\n          ))}\n      </ul>\n      <form className=\"add-comment\" onSubmit={handleSubmit}>\n        <label>\n          <span>Add new comment</span>\n          <textarea\n            required\n            onChange={(e) => setNewComment(e.target.value)}\n            value={newComment}\n          ></textarea>\n        </label>\n        <button className=\"btn\">Add comment</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}