{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { projectAuth, projectFirestore } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useLogout = () => {\n  _s();\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const {\n    dispatch,\n    user\n  } = useAuthContext();\n  const logout = async () => {\n    setError(null);\n    setIsPending(true);\n    try {\n      const {\n        uid\n      } = user;\n      await projectFirestore.collection(\"users\").doc(uid).update({\n        online: false\n      });\n      // sign the user out\n      await projectAuth.signOut();\n\n      // dispatch logout action\n      dispatch({\n        type: \"LOGOUT\"\n      });\n\n      // update state\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n  return {\n    logout,\n    error,\n    isPending\n  };\n};\n_s(useLogout, \"mz4hukR6em+7UnF7i3IcqSe4IbY=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useEffect","useState","projectAuth","projectFirestore","useAuthContext","useLogout","_s","isCancelled","setIsCancelled","error","setError","isPending","setIsPending","dispatch","user","logout","uid","collection","doc","update","online","signOut","type","err","message"],"sources":["/home/suleman/Downloads/project-management-system-react-javascript-main/src/hooks/useLogout.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { projectAuth, projectFirestore } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useLogout = () => {\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const { dispatch, user } = useAuthContext();\n\n  const logout = async () => {\n    setError(null);\n    setIsPending(true);\n\n    try {\n      const { uid } = user;\n      await projectFirestore\n        .collection(\"users\")\n        .doc(uid)\n        .update({ online: false });\n      // sign the user out\n      await projectAuth.signOut();\n\n      // dispatch logout action\n      dispatch({ type: \"LOGOUT\" });\n\n      // update state\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n\n  return { logout, error, isPending };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,oBAAoB;AAClE,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEY,QAAQ;IAAEC;EAAK,CAAC,GAAGV,cAAc,CAAC,CAAC;EAE3C,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBL,QAAQ,CAAC,IAAI,CAAC;IACdE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAM;QAAEI;MAAI,CAAC,GAAGF,IAAI;MACpB,MAAMX,gBAAgB,CACnBc,UAAU,CAAC,OAAO,CAAC,CACnBC,GAAG,CAACF,GAAG,CAAC,CACRG,MAAM,CAAC;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC;MAC5B;MACA,MAAMlB,WAAW,CAACmB,OAAO,CAAC,CAAC;;MAE3B;MACAR,QAAQ,CAAC;QAAES,IAAI,EAAE;MAAS,CAAC,CAAC;;MAE5B;MACA,IAAI,CAACf,WAAW,EAAE;QAChBK,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZ,IAAI,CAAChB,WAAW,EAAE;QAChBG,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;QACrBZ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,OAAO,MAAMQ,cAAc,CAAC,IAAI,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEO,MAAM;IAAEN,KAAK;IAAEE;EAAU,CAAC;AACrC,CAAC;AAACL,EAAA,CAxCWD,SAAS;EAAA,QAIOD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}