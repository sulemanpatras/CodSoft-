{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { projectAuth, projectStorage, projectFirestore } from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password, displayName, thumbnail) => {\n    setError(null);\n    setIsPending(true);\n    try {\n      // signup\n      const res = await projectAuth.createUserWithEmailAndPassword(email, password);\n      if (!res) {\n        throw new Error(\"Could not complete signup\");\n      }\n\n      // upload user thumbnail\n      const uploadPath = `thumbnails/${res.user.uid}/${thumbnail.name}`;\n      const img = await projectStorage.ref(uploadPath).put(thumbnail);\n      const imgURL = await img.ref.getDownloadURL();\n\n      // add display name to user\n      await res.user.updateProfile({\n        displayName,\n        photoURL: imgURL\n      });\n\n      // create user document\n      await projectFirestore.collection(\"users\").doc(res.user.uid).set({\n        online: true,\n        displayName,\n        photoURL: imgURL\n      });\n\n      // dispatch login action\n      dispatch({\n        type: \"LOGIN\",\n        payload: res.user\n      });\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n  return {\n    signup,\n    error,\n    isPending\n  };\n};\n_s(useSignup, \"cGSci79bHdsL+KPhvW2BaLT9Dxk=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useEffect","projectAuth","projectStorage","projectFirestore","useAuthContext","useSignup","_s","isCancelled","setIsCancelled","error","setError","isPending","setIsPending","dispatch","signup","email","password","displayName","thumbnail","res","createUserWithEmailAndPassword","Error","uploadPath","user","uid","name","img","ref","put","imgURL","getDownloadURL","updateProfile","photoURL","collection","doc","set","online","type","payload","err","message"],"sources":["/home/suleman/Downloads/project-management-system-react-javascript-main/src/hooks/useSignup.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  projectAuth,\n  projectStorage,\n  projectFirestore,\n} from \"../firebase/config\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useSignup = () => {\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const { dispatch } = useAuthContext();\n\n  const signup = async (email, password, displayName, thumbnail) => {\n    setError(null);\n    setIsPending(true);\n\n    try {\n      // signup\n      const res = await projectAuth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n\n      if (!res) {\n        throw new Error(\"Could not complete signup\");\n      }\n\n      // upload user thumbnail\n      const uploadPath = `thumbnails/${res.user.uid}/${thumbnail.name}`;\n      const img = await projectStorage.ref(uploadPath).put(thumbnail);\n      const imgURL = await img.ref.getDownloadURL();\n\n      // add display name to user\n      await res.user.updateProfile({ displayName, photoURL: imgURL });\n\n      // create user document\n      await projectFirestore.collection(\"users\").doc(res.user.uid).set({\n        online: true,\n        displayName,\n        photoURL: imgURL,\n      });\n\n      // dispatch login action\n      dispatch({ type: \"LOGIN\", payload: res.user });\n\n      if (!isCancelled) {\n        setIsPending(false);\n        setError(null);\n      }\n    } catch (err) {\n      if (!isCancelled) {\n        setError(err.message);\n        setIsPending(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => setIsCancelled(true);\n  }, []);\n\n  return { signup, error, isPending };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,WAAW,EACXC,cAAc,EACdC,gBAAgB,QACX,oBAAoB;AAC3B,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEc;EAAS,CAAC,GAAGT,cAAc,CAAC,CAAC;EAErC,MAAMU,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,KAAK;IAChER,QAAQ,CAAC,IAAI,CAAC;IACdE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF;MACA,MAAMO,GAAG,GAAG,MAAMlB,WAAW,CAACmB,8BAA8B,CAC1DL,KAAK,EACLC,QACF,CAAC;MAED,IAAI,CAACG,GAAG,EAAE;QACR,MAAM,IAAIE,KAAK,CAAC,2BAA2B,CAAC;MAC9C;;MAEA;MACA,MAAMC,UAAU,GAAI,cAAaH,GAAG,CAACI,IAAI,CAACC,GAAI,IAAGN,SAAS,CAACO,IAAK,EAAC;MACjE,MAAMC,GAAG,GAAG,MAAMxB,cAAc,CAACyB,GAAG,CAACL,UAAU,CAAC,CAACM,GAAG,CAACV,SAAS,CAAC;MAC/D,MAAMW,MAAM,GAAG,MAAMH,GAAG,CAACC,GAAG,CAACG,cAAc,CAAC,CAAC;;MAE7C;MACA,MAAMX,GAAG,CAACI,IAAI,CAACQ,aAAa,CAAC;QAAEd,WAAW;QAAEe,QAAQ,EAAEH;MAAO,CAAC,CAAC;;MAE/D;MACA,MAAM1B,gBAAgB,CAAC8B,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACf,GAAG,CAACI,IAAI,CAACC,GAAG,CAAC,CAACW,GAAG,CAAC;QAC/DC,MAAM,EAAE,IAAI;QACZnB,WAAW;QACXe,QAAQ,EAAEH;MACZ,CAAC,CAAC;;MAEF;MACAhB,QAAQ,CAAC;QAAEwB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEnB,GAAG,CAACI;MAAK,CAAC,CAAC;MAE9C,IAAI,CAAChB,WAAW,EAAE;QAChBK,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,CAAC,OAAO6B,GAAG,EAAE;MACZ,IAAI,CAAChC,WAAW,EAAE;QAChBG,QAAQ,CAAC6B,GAAG,CAACC,OAAO,CAAC;QACrB5B,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,OAAO,MAAMQ,cAAc,CAAC,IAAI,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEM,MAAM;IAAEL,KAAK;IAAEE;EAAU,CAAC;AACrC,CAAC;AAACL,EAAA,CAxDWD,SAAS;EAAA,QAICD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}